# Generated by Django 2.0.7 on 2018-10-04 04:42

from django.conf import settings
import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion
import simple_history.models


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('contenttypes', '0002_remove_content_type_name'),
        ('api', '0002_auto_20180923_1823'),
    ]

    operations = [
        migrations.CreateModel(
            name='Entity',
            fields=[
                ('id', models.AutoField(auto_created=True,
                                        primary_key=True, serialize=False, verbose_name='ID')),
                (
                    'name',
                    models.TextField(
                        help_text='Canonical name, should not include any epithets, must be unique',
                        max_length=100,
                        unique=True)),
                (
                    'url_id',
                    models.SlugField(
                        help_text='Identifier used to lookup Entities in the URL, should be kept short and must be unique',
                        max_length=75,
                        unique=True)),
                ('references', django.contrib.postgres.fields.ArrayField(
                    base_field=models.TextField(max_length=150), size=None)),
                ('links', django.contrib.postgres.fields.ArrayField(
                    base_field=models.URLField(), blank=True, size=None)),
                ('description', models.TextField(blank=True,
                                                 help_text='Flavor text, brief history, etc.')),
                (
                    'aliases',
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.TextField(
                            max_length=100),
                        blank=True,
                        help_text='Alternative names this state may be known by',
                        size=None)),
                ('polymorphic_ctype',
                 models.ForeignKey(editable=False,
                                   null=True,
                                   on_delete=django.db.models.deletion.CASCADE,
                                   related_name='polymorphic_api.entity_set+',
                                   to='contenttypes.ContentType')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
        ),
        migrations.CreateModel(
            name='HistoricalEntity',
            fields=[
                ('id', models.IntegerField(auto_created=True,
                                           blank=True, db_index=True, verbose_name='ID')),
                ('name',
                 models.TextField(db_index=True,
                                  help_text='Canonical name, should not include any epithets, must be unique',
                                  max_length=100)),
                (
                    'url_id',
                    models.SlugField(
                        help_text='Identifier used to lookup Entities in the URL, should be kept short and must be unique',
                        max_length=75)),
                ('references', django.contrib.postgres.fields.ArrayField(
                    base_field=models.TextField(max_length=150), size=None)),
                ('links', django.contrib.postgres.fields.ArrayField(
                    base_field=models.URLField(), blank=True, size=None)),
                ('description', models.TextField(blank=True,
                                                 help_text='Flavor text, brief history, etc.')),
                (
                    'aliases',
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.TextField(
                            max_length=100),
                        blank=True,
                        help_text='Alternative names this state may be known by',
                        size=None)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_change_reason', models.CharField(
                    max_length=100, null=True)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(choices=[
                 ('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user',
                 models.ForeignKey(null=True,
                                   on_delete=django.db.models.deletion.SET_NULL,
                                   related_name='+',
                                   to=settings.AUTH_USER_MODEL)),
                ('polymorphic_ctype',
                 models.ForeignKey(blank=True,
                                   db_constraint=False,
                                   null=True,
                                   on_delete=django.db.models.deletion.DO_NOTHING,
                                   related_name='+',
                                   to='contenttypes.ContentType')),
            ],
            options={
                'verbose_name': 'historical entity',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.AlterModelOptions(
            name='politicalentity',
            options={'base_manager_name': 'objects'},
        ),
        migrations.RemoveField(
            model_name='politicalentity',
            name='aliases',
        ),
        migrations.RemoveField(
            model_name='politicalentity',
            name='description',
        ),
        migrations.RemoveField(
            model_name='politicalentity',
            name='id',
        ),
        migrations.RemoveField(
            model_name='politicalentity',
            name='links',
        ),
        migrations.RemoveField(
            model_name='politicalentity',
            name='name',
        ),
        migrations.RemoveField(
            model_name='politicalentity',
            name='references',
        ),
        migrations.RemoveField(
            model_name='politicalentity',
            name='url_id',
        ),
        migrations.AddField(
            model_name='historicalpoliticalentity',
            name='polymorphic_ctype',
            field=models.ForeignKey(
                blank=True,
                db_constraint=False,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name='+',
                to='contenttypes.ContentType'),
        ),
        migrations.AddField(
            model_name='historicalpoliticalentity',
            name='entity_ptr',
            field=models.ForeignKey(
                blank=True,
                db_constraint=False,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name='+',
                to='api.Entity'),
        ),
        migrations.AddField(
            model_name='historicalterritory',
            name='entity',
            field=models.ForeignKey(
                blank=True,
                db_constraint=False,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name='+',
                to='api.Entity'),
        ),
        migrations.AddField(
            model_name='politicalentity',
            name='entity_ptr',
            field=models.OneToOneField(
                auto_created=True,
                default=1,
                on_delete=django.db.models.deletion.CASCADE,
                parent_link=True,
                primary_key=True,
                serialize=False,
                to='api.Entity'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='territory',
            name='entity',
            field=models.ForeignKey(
                default=1,
                on_delete=django.db.models.deletion.CASCADE,
                related_name='territories',
                to='api.Entity'),
            preserve_default=False,
        ),
    ]
